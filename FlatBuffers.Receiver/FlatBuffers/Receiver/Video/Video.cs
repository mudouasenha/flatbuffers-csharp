// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatBuffers.Receiver.Video
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Video : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static Video GetRootAsVideo(ByteBuffer _bb) { return GetRootAsVideo(_bb, new Video()); }
  public static Video GetRootAsVideo(ByteBuffer _bb, Video obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Video __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FlatBuffers.Receiver.Video.SocialInfo? SocialInfo { get { int o = __p.__offset(4); return o != 0 ? (FlatBuffers.Receiver.Video.SocialInfo?)(new FlatBuffers.Receiver.Video.SocialInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public FlatBuffers.Receiver.Video.VideoInfo? VideoInfo { get { int o = __p.__offset(6); return o != 0 ? (FlatBuffers.Receiver.Video.VideoInfo?)(new FlatBuffers.Receiver.Video.VideoInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public FlatBuffers.Receiver.Video.Channel? Channel { get { int o = __p.__offset(8); return o != 0 ? (FlatBuffers.Receiver.Video.Channel?)(new FlatBuffers.Receiver.Video.Channel()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<FlatBuffers.Receiver.Video.Video> CreateVideo(FlatBufferBuilder builder,
      Offset<FlatBuffers.Receiver.Video.SocialInfo> social_infoOffset = default(Offset<FlatBuffers.Receiver.Video.SocialInfo>),
      Offset<FlatBuffers.Receiver.Video.VideoInfo> video_infoOffset = default(Offset<FlatBuffers.Receiver.Video.VideoInfo>),
      Offset<FlatBuffers.Receiver.Video.Channel> channelOffset = default(Offset<FlatBuffers.Receiver.Video.Channel>)) {
    builder.StartTable(3);
    Video.AddChannel(builder, channelOffset);
    Video.AddVideoInfo(builder, video_infoOffset);
    Video.AddSocialInfo(builder, social_infoOffset);
    return Video.EndVideo(builder);
  }

  public static void StartVideo(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSocialInfo(FlatBufferBuilder builder, Offset<FlatBuffers.Receiver.Video.SocialInfo> socialInfoOffset) { builder.AddOffset(0, socialInfoOffset.Value, 0); }
  public static void AddVideoInfo(FlatBufferBuilder builder, Offset<FlatBuffers.Receiver.Video.VideoInfo> videoInfoOffset) { builder.AddOffset(1, videoInfoOffset.Value, 0); }
  public static void AddChannel(FlatBufferBuilder builder, Offset<FlatBuffers.Receiver.Video.Channel> channelOffset) { builder.AddOffset(2, channelOffset.Value, 0); }
  public static Offset<FlatBuffers.Receiver.Video.Video> EndVideo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatBuffers.Receiver.Video.Video>(o);
  }
  public static void FinishVideoBuffer(FlatBufferBuilder builder, Offset<FlatBuffers.Receiver.Video.Video> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedVideoBuffer(FlatBufferBuilder builder, Offset<FlatBuffers.Receiver.Video.Video> offset) { builder.FinishSizePrefixed(offset.Value); }
}


}
