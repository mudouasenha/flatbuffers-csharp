// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatBuffersModels
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct VideoFlatModel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static VideoFlatModel GetRootAsVideoFlatModel(ByteBuffer _bb) { return GetRootAsVideoFlatModel(_bb, new VideoFlatModel()); }
  public static VideoFlatModel GetRootAsVideoFlatModel(ByteBuffer _bb, VideoFlatModel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyVideoFlatModel(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, VideoFlatModelVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public VideoFlatModel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FlatBuffersModels.SocialInfoFlatModel? SocialInfo { get { int o = __p.__offset(4); return o != 0 ? (FlatBuffersModels.SocialInfoFlatModel?)(new FlatBuffersModels.SocialInfoFlatModel()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public FlatBuffersModels.VideoInfoFlatModel? VideoInfo { get { int o = __p.__offset(6); return o != 0 ? (FlatBuffersModels.VideoInfoFlatModel?)(new FlatBuffersModels.VideoInfoFlatModel()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public FlatBuffersModels.ChannelFlatModel? Channel { get { int o = __p.__offset(8); return o != 0 ? (FlatBuffersModels.ChannelFlatModel?)(new FlatBuffersModels.ChannelFlatModel()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<FlatBuffersModels.VideoFlatModel> CreateVideoFlatModel(FlatBufferBuilder builder,
      Offset<FlatBuffersModels.SocialInfoFlatModel> social_infoOffset = default(Offset<FlatBuffersModels.SocialInfoFlatModel>),
      Offset<FlatBuffersModels.VideoInfoFlatModel> video_infoOffset = default(Offset<FlatBuffersModels.VideoInfoFlatModel>),
      Offset<FlatBuffersModels.ChannelFlatModel> channelOffset = default(Offset<FlatBuffersModels.ChannelFlatModel>)) {
    builder.StartTable(3);
    VideoFlatModel.AddChannel(builder, channelOffset);
    VideoFlatModel.AddVideoInfo(builder, video_infoOffset);
    VideoFlatModel.AddSocialInfo(builder, social_infoOffset);
    return VideoFlatModel.EndVideoFlatModel(builder);
  }

  public static void StartVideoFlatModel(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSocialInfo(FlatBufferBuilder builder, Offset<FlatBuffersModels.SocialInfoFlatModel> socialInfoOffset) { builder.AddOffset(0, socialInfoOffset.Value, 0); }
  public static void AddVideoInfo(FlatBufferBuilder builder, Offset<FlatBuffersModels.VideoInfoFlatModel> videoInfoOffset) { builder.AddOffset(1, videoInfoOffset.Value, 0); }
  public static void AddChannel(FlatBufferBuilder builder, Offset<FlatBuffersModels.ChannelFlatModel> channelOffset) { builder.AddOffset(2, channelOffset.Value, 0); }
  public static Offset<FlatBuffersModels.VideoFlatModel> EndVideoFlatModel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatBuffersModels.VideoFlatModel>(o);
  }
  public static void FinishVideoFlatModelBuffer(FlatBufferBuilder builder, Offset<FlatBuffersModels.VideoFlatModel> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedVideoFlatModelBuffer(FlatBufferBuilder builder, Offset<FlatBuffersModels.VideoFlatModel> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class VideoFlatModelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*SocialInfo*/, FlatBuffersModels.SocialInfoFlatModelVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 6 /*VideoInfo*/, FlatBuffersModels.VideoInfoFlatModelVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 8 /*Channel*/, FlatBuffersModels.ChannelFlatModelVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
